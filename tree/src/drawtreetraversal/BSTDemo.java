package drawtreetraversal;

import java.awt.BorderLayout;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author CE160353 PhamThanhNghiem
 */
public class BSTDemo extends javax.swing.JFrame {

    private BSTree tree;
    private BSTPaper paper;
    private Random random;

    /**
     * Creates new form BSTDemo
     */
    public BSTDemo() {
        initComponents();
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        this.tree = new BSTree(1600);
        this.paper = new BSTPaper(tree);
        pnlPaper.setLayout(new BorderLayout());
        pnlPaper.add(paper, BorderLayout.CENTER);
        txtTraversalResult.setEditable(false);
        random = new Random();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblNodeValue = new javax.swing.JLabel();
        txtNodeValue = new javax.swing.JTextField();
        btnAddNode = new javax.swing.JButton();
        btnAddRandom = new javax.swing.JButton();
        btnPostOrder = new javax.swing.JButton();
        btnInOrder = new javax.swing.JButton();
        btnPreOrder = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnBalancing = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnLoad = new javax.swing.JButton();
        btnBFS = new javax.swing.JButton();
        btnDFS = new javax.swing.JButton();
        pnlPaper = new javax.swing.JPanel();
        txtTraversalResult = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Binary Search Tree v1.0");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuration"));

        lblNodeValue.setText("Node's Value");

        txtNodeValue.setText("0");
        txtNodeValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNodeValueActionPerformed(evt);
            }
        });

        btnAddNode.setText("Add node");
        btnAddNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNodeActionPerformed(evt);
            }
        });

        btnAddRandom.setText("Add random");
        btnAddRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRandomActionPerformed(evt);
            }
        });

        btnPostOrder.setText("Post-order");
        btnPostOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostOrderActionPerformed(evt);
            }
        });

        btnInOrder.setText("In-order");
        btnInOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInOrderActionPerformed(evt);
            }
        });

        btnPreOrder.setText("Pre-order");
        btnPreOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreOrderActionPerformed(evt);
            }
        });

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnBalancing.setText("Balancing");
        btnBalancing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBalancingActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnLoad.setText("Load");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        btnBFS.setText("BFS");
        btnBFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBFSActionPerformed(evt);
            }
        });

        btnDFS.setText("DFS");
        btnDFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDFSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblNodeValue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNodeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddNode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddRandom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFind)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBalancing)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLoad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(btnDFS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBFS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPreOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPostOrder))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblNodeValue)
                .addComponent(txtNodeValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnAddNode)
                .addComponent(btnAddRandom)
                .addComponent(btnFind)
                .addComponent(btnDelete)
                .addComponent(btnClear)
                .addComponent(btnBalancing)
                .addComponent(btnSave)
                .addComponent(btnLoad))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnPostOrder)
                .addComponent(btnInOrder)
                .addComponent(btnPreOrder)
                .addComponent(btnBFS)
                .addComponent(btnDFS))
        );

        pnlPaper.setBorder(null);

        javax.swing.GroupLayout pnlPaperLayout = new javax.swing.GroupLayout(pnlPaper);
        pnlPaper.setLayout(pnlPaperLayout);
        pnlPaperLayout.setHorizontalGroup(
            pnlPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlPaperLayout.setVerticalGroup(
            pnlPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 278, Short.MAX_VALUE)
        );

        txtTraversalResult.setText("Traversal result: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlPaper, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTraversalResult))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlPaper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTraversalResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNodeValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNodeValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNodeValueActionPerformed

    private void btnAddNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNodeActionPerformed
        this.paper.addNode(Integer.valueOf(txtNodeValue.getText()));
    }//GEN-LAST:event_btnAddNodeActionPerformed

    private void btnPreOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreOrderActionPerformed
        this.tree.getPreOrder();
        txtTraversalResult.setText("Treversal pre-order result: " + this.tree.getTraversal());
    }//GEN-LAST:event_btnPreOrderActionPerformed

    private void btnInOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInOrderActionPerformed
        this.tree.getInOrder();
        txtTraversalResult.setText("Treversal in-order result: " + this.tree.getTraversal());
    }//GEN-LAST:event_btnInOrderActionPerformed

    private void btnPostOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostOrderActionPerformed
        this.tree.getPostOrder();
        txtTraversalResult.setText("Treversal post-order result: " + this.tree.getTraversal());
    }//GEN-LAST:event_btnPostOrderActionPerformed

    private void btnAddRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRandomActionPerformed
        this.paper.addNode(Integer.valueOf(random.nextInt(100)));
    }//GEN-LAST:event_btnAddRandomActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        int nodeValue = Integer.parseInt(txtNodeValue.getText());
        BSTNode node = this.tree.findNode(nodeValue);
        if (node == null) {
            JOptionPane.showMessageDialog(this, "The node '" + nodeValue + " is not found in the BST!");
            txtTraversalResult.setText("The node '" + nodeValue + " is not found in the BST!");
        } else {
            this.paper.drawPathOfNode();
            txtTraversalResult.setText("The node '" + nodeValue + " is found in the BST: " + this.tree.getPathOfNode().substring(0, this.tree.getPathOfNode().length() - 3));
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int nodeValue = Integer.parseInt(txtNodeValue.getText());
        BSTNode node = this.tree.findNode(nodeValue);
        if (node == null) {
            JOptionPane.showMessageDialog(this, "The node '" + nodeValue + " is not found in the BST!");
            txtTraversalResult.setText("The node '" + nodeValue + " is not found in the BST!");
        } else {
            this.paper.drawPathOfNode();
            txtTraversalResult.setText("The node '" + nodeValue + " is found in the BST: " + this.tree.getPathOfNode().substring(0, this.tree.getPathOfNode().length() - 2));

            if (JOptionPane.showConfirmDialog(this,
                    "Do you really want to delete the node '" + nodeValue
                    + "'?", "Warning", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                this.paper.drawDeleteNode(nodeValue);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        this.tree.clear();
        this.paper.refresh();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnDFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDFSActionPerformed
        this.tree.getDFS();
        txtTraversalResult.setText("Treversal DFS result: " + this.tree.getTraversal());
    }//GEN-LAST:event_btnDFSActionPerformed

    private void btnBalancingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBalancingActionPerformed
        this.tree.balancing();
        this.paper.refresh();
    }//GEN-LAST:event_btnBalancingActionPerformed

    private void btnBFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBFSActionPerformed
        this.tree.getBFS();
        txtTraversalResult.setText("Treversal BFS result: " + this.tree.getTraversal());
    }//GEN-LAST:event_btnBFSActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        JFileChooser jfc = new JFileChooser();
        if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            File f = jfc.getSelectedFile();
            try (FileOutputStream fos = new FileOutputStream(f)) {
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(this.tree);
                oos.flush();
                fos.flush();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(BSTDemo.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(BSTDemo.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        JFileChooser jfc = new JFileChooser();
        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File f = jfc.getSelectedFile();
            if (f.exists()) {
                try (FileInputStream fis = new FileInputStream(f)) {
                    ObjectInputStream ois = new ObjectInputStream(fis);
                    this.tree.clear();
                    this.tree = (BSTree) ois.readObject();
                    this.paper.setTree(tree);
                    this.paper.refresh();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(BSTDemo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(BSTDemo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(BSTDemo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnLoadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BSTDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BSTDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BSTDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BSTDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BSTDemo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNode;
    private javax.swing.JButton btnAddRandom;
    private javax.swing.JButton btnBFS;
    private javax.swing.JButton btnBalancing;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDFS;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnInOrder;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnPostOrder;
    private javax.swing.JButton btnPreOrder;
    private javax.swing.JButton btnSave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblNodeValue;
    private javax.swing.JPanel pnlPaper;
    private javax.swing.JTextField txtNodeValue;
    private javax.swing.JTextField txtTraversalResult;
    // End of variables declaration//GEN-END:variables
}
